plugins {
    id 'java'
    id 'idea'
    id "io.freefair.lombok" version "6.5.1"
}

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

java {
    sourceCompatibility = JavaLanguageVersion.of(17)
    targetCompatibility = JavaLanguageVersion.of(17)
}

group 'ru.clevertec'
version '1.0-SNAPSHOT'

sourceSets {
    test {
        java.srcDirs("src/test/unit/java")
        resources.srcDir("src/test/unit/resources")
    }

    integrationTest {
        compileClasspath += sourceSets.main.output
        compileClasspath += sourceSets.test.output
        runtimeClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.test.output
        java.srcDirs("src/test/integration/java")
        resources.srcDirs("src/test/integration/resources")
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly

    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation("org.jetbrains:annotations:23.0.0")
    compileOnly("org.projectlombok:lombok:1.18.30")
    implementation("org.projectlombok:lombok:1.18.22")

    implementation("org.slf4j:slf4j-simple:2.0.7")

    testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.2")
//    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.2")
//    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.7.2")
//    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.2")

    testImplementation ("org.mockito:mockito-junit-jupiter:5.6.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.2")
}

test {
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    useJUnitPlatform()
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
